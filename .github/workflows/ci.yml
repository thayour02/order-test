name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_DB: order
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
        ports: ["5432:5432"]
        options: >-
          --health-cmd "pg_isready -U root" --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      DB_SOURCE: postgresql://root:secret@localhost:5432/order?sslmode=disable

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.x'

    - name: Install migrate
      run: |
        version=4.15.2
        os=$(uname | tr '[:upper:]' '[:lower:]')
        arch=$(uname -m)
        if [ "$arch" = "x86_64" ]; then arch="amd64"; fi
        if [ "$arch" = "aarch64" ]; then arch="arm64"; fi
        curl -L https://github.com/golang-migrate/migrate/releases/download/v${version}/migrate.${os}-${arch}.tar.gz | tar -xz
        sudo mv migrate /usr/local/bin/migrate
        migrate -version

    - name: Wait for Postgres to be ready
      run: |
        for i in {1..30}; do
          pg_isready -h localhost -p 5432 -U root && break
          echo "Waiting for Postgres..."
          sleep 2
        done
      env:
        PGPASSWORD: secret

    - name: Run migrations
      run: migrate -path db/migration -database "$DB_SOURCE" -verbose up

    - name: Run tests
      run: go test -v ./...
